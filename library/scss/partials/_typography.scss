/******************************************************************
Site Name:
Author:

Stylesheet: Typography

Need to import a font or set of icons for your site? Drop them in
here or just use this to establish your typographical grid. Or not.
Do whatever you want to...GOSH!

Helpful Articles:
http://trentwalton.com/2012/06/19/fluid-type/
http://ia.net/blog/responsive-typography-the-basics/
http://alistapart.com/column/responsive-typography-is-a-physical-discipline

******************************************************************/


/*
The following is based of Typebase:
https://github.com/devinhunt/typebase.css
I've edited it a bit, but it's a nice starting point.
*/


// font stacks
$sans-serif:        "Helvetica Neue", Helvetica, Arial, sans-serif;
$serif:             "Georgia", Cambria, Times New Roman, Times, serif;


/*********************************************
		T y p e k i t   O v e r w r i t e
		
	If you've used any fonts from typekit
	and you want to use them, plop them in here.

*********************************************/

$sans-serif:        "museo-slab", "Helvetica Neue", Helvetica, Arial, sans-serif;



/*
some nice typographical defaults
more here: http://www.newnet-soft.com/blog/csstypography
*/
p {
  -ms-word-break: break-all;
  -ms-word-wrap: break-all;
      word-break: break-word;
     word-break: break-word;
  // cleaning up the ragged lines and breaks
  -webkit-hyphens: auto;
     -moz-hyphens: auto;
          hyphens: auto;
  // sets a minimum number of characters before and after the break
  -webkit-hyphenate-before: 2;
   -webkit-hyphenate-after: 3;
           hyphenate-lines: 3;
  // enabling fancy ligatures when available
  -webkit-font-feature-settings: "liga", "dlig";
   -moz-font-feature-settings: "liga=1, dlig=1";
      -ms-font-feature-settings: "liga", "dlig";
       -o-font-feature-settings: "liga", "dlig";
          font-feature-settings: "liga", "dlig";
}





/*********************
Text Overflow
*********************/

@mixin text-overflow() {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

/********************************* 

// This is for website rem to PX
// so you can use @include font-size(2);
// which outputs font-size: 24px; font-size:2rem;

*********************************/

@mixin font-size($sizeValue: 1.6) {
  font-size: ($sizeValue * 16) + px;
  font-size: $sizeValue + rem;
}


/********************************* 

Vertical Rhythm Mixin

This mixin is to help create a typograhpical baseline grid
but also to allow for specifying different line heights 
or bottom margins if you need to.

In this mixin you can specifiy the font size in PX and 
it will calculate the REM based on your $doc-font-size 
& $doc-line-height variables. 

	@include font-size(24);

It will also create a bottom margin based on the 
$doc-font-size & $doc-line-height variables unless 
you specify that it shouldn't have one -

	@include font-size(24, no);

Or if you want to specify a different bottom margin 
to be generated -

	@include font-size(24,32);

This mixin also generates a pixel-less line height 
by default unless you specify that you either don't 
want one where I'd suggest declaring 1 within the mixin -

	@include font-size(24, yes, 1);

There's also the option to specify a different line-height 
for it to generate to, where you would specify the 
line-height in (effectively) it's pixel value -

	@include font-size(24, yes, 40);

*********************************/

// this is the default font-size you want for the project
/////////////////////////////////////////////////////////

  $doc-font-size: 16;

// this is the default line-height you want for the project
///////////////////////////////////////////////////////////

  $doc-line-height: 24;

// the magic mixin
//////////////////

  @mixin font-size($size, $margin: yes, $line-height: $doc-line-height) {
    
      // generates the font-size in REMs with a PX fallback
      font-size: 0px + $size;
      font-size: 0rem + $size / $doc-font-size;
    
      // line-height functions
      ////////////////////////
    
      // if you a line-height is specified in the mixin
      @if $line-height != $doc-line-height and $line-height != 1 {
        line-height: ceil($size / $line-height) * ($line-height / $size);
      }
      
      // if $line-height == 1
      // because, typing 1 is quicker than 16
      @else if $line-height == 1 {
        line-height: 1;
      }
    
      // normal $line-height
      // if the line-height is left.
      @else {
        line-height: ceil($size / $doc-line-height) * ($doc-line-height / $size);
      }
    
      // margin-bottom functions
      //////////////////////////
    
      // if no is bottom margin is required
      @if $margin == no {
        margin-bottom: 0;  
      }  
      
      // if a specific bottom margin is required
      @else if $margin != yes and $margin != no {
        margin-bottom: 0px + $margin;
        margin-bottom: 0rem + ($margin / $doc-font-size);  
      }
    
      // if you're keeping the vertical rhythm with the margin
      @else {
        margin-bottom: 0px + $doc-line-height;
        margin-bottom: 0rem + ($doc-line-height / $doc-font-size);  
      }
  }


.all { @include font-size(14); }
.no-margin { @include font-size(16, no); }
.no-line-height { @include font-size(16, yes, 1); }
.define-line-height { @include font-size(16, yes, 48); }
.define-margin-bottom { @include font-size(16, 48); }
.define-all { @include font-size(16, 48, 48); }


/*********************************
	Text alignment in classes	
*********************************/

.text-left   { text-align: left; }
.text-center { text-align: center; }
.text-right  { text-align: right; }

// This forces divs to be center aligned

.marginauto { 
	margin: 0 auto !important; 
	float: none !important; 
}